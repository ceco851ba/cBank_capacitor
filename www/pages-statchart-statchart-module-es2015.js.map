{"version":3,"sources":["./src/app/pages/statchart/statchart.page.html","./src/app/pages/statchart/statchart-routing.module.ts","./src/app/pages/statchart/statchart.module.ts","./src/app/pages/statchart/statchart.page.scss","./src/app/pages/statchart/statchart.page.ts"],"names":[],"mappings":"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","file":"pages-statchart-statchart-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>statchart</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StatchartPage } from './statchart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatchartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StatchartPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatchartPageRoutingModule } from './statchart-routing.module';\n\nimport { StatchartPage } from './statchart.page';\nimport { ChartsModule } from 'ng2-charts';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StatchartPageRoutingModule,\n    ChartsModule\n  ],\n  \n\n  declarations: [StatchartPage]\n})\nexport class StatchartPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0YXRjaGFydC9zdGF0Y2hhcnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { User } from '../../user';\nimport { Storage } from '@ionic/storage';\nimport { MyTransaction } from '../../my-transaction';\nimport { Chart } from 'chart.js';\n@Component({\n  selector: 'app-statchart',\n  templateUrl: './statchart.page.html',\n  styleUrls: ['./statchart.page.scss'],\n})\nexport class StatchartPage implements OnInit {\n  @ViewChild('lineCanvas',null) lineCanvas;\n\n  TransactionsList : MyTransaction[] = new Array ();\n  profile:User = new User();\n  mTypesAndAmounts = new Map<string,number>();\n  lineChart: any;\n\n  constructor(private storage: Storage, private navController: NavController) {\n\n    this.storage.get('user').then((val) => {\n      this.profile = JSON.parse(val);  \n  });\n\n  this.storage.get('transactions').then((val) => {\n    this.TransactionsList = JSON.parse(val);\n    this.TransactionsList.forEach(transaction => {\n      if  (transaction.recieverId = transaction.senderId ){\n        \n        this.TransactionsList.push(transaction);\n          //if my map contains type than we add amount of transaction to value in map else we create new map record\n          if(this.mTypesAndAmounts.has(transaction.transactionCategory)){\n            this.mTypesAndAmounts.set(transaction.transactionCategory,(this.mTypesAndAmounts.get(transaction.transactionCategory) + transaction.amount));\n          }\n          else{\n            this.mTypesAndAmounts.set(transaction.transactionCategory,transaction.amount)\n      }\n\n    }  \n    });\n    });\n    this.createDoughnut(this.mTypesAndAmounts)\n\n   }\n\n  ngOnInit() {\n  }\n\n  public createDoughnut(inDataMap: Map<string,number>) {\n\n    let bgColors = new Array();\n    let bgHowerColors = new Array();\n    inDataMap.forEach(()=>{\n      bgColors.push( this.hexToRgbA(this.getRandomColor()));\n      console.log(\"hex to rgbA = \", bgColors[bgColors.length-1]);\n      bgHowerColors.push(this.getRandomColor());\n    })\n\n    console.log(inDataMap);\n      this.lineChart = new Chart(this.lineCanvas.nativeElement, {\n\n        type: \"doughnut\",\n        data: {\n          datasets: [\n            {\n              label: \"Stats\",\n              data: Array.from( inDataMap.values() ),\n              backgroundColor: bgColors,\n              hoverBackgroundColor: bgHowerColors\n            }\n          ],\n          labels: Array.from( inDataMap.keys() )\n        },\n        options:{\n          legend:{\n            position:'bottom'\n          }\n        }\n      });\n      \n  }\n\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  hexToRgbA(hex){\n    let c;\n    c= hex.substring(1).split('');\n    if(c.length== 3){\n          c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n    c= '0x'+c.join('');\n    // tslint:disable-next-line: no-bitwise\n    return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',1)';\n}\n\n\n\n}\n"],"sourceRoot":""}