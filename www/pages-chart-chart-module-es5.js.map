{"version":3,"sources":["./src/app/pages/chart/chart.page.html","./src/app/pages/chart/chart-routing.module.ts","./src/app/pages/chart/chart.module.ts","./src/app/pages/chart/chart.page.scss","./src/app/pages/chart/chart.page.ts"],"names":[],"mappings":"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","file":"pages-chart-chart-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-item>\\n        <ion-title align=\\\"center\\\" style=\\\"font-weight: bold; color:rgb(24, 0, 163);\\\">   Chart  </ion-title>\\n      </ion-item>\\n    </ion-toolbar>\\n  </ion-header>\\n \\n\\n  <ion-content>\\n    <ion-card>\\n      <canvas #doughnutCanvas></canvas>\\n    </ion-card>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartPage } from './chart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChartPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ChartPageRoutingModule } from './chart-routing.module';\nimport { ChartPage } from './chart.page';\n//import { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChartPageRoutingModule,\n    ChartsModule\n  ],\n  declarations: [ChartPage]\n})\nexport class ChartPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJ0L2NoYXJ0LnBhZ2Uuc2NzcyJ9 */\"","\nimport {Component, Directive, Input, ViewChild, OnInit ,ElementRef }from '@angular/core';\n//import { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\nimport { NavController } from '@ionic/angular';\nimport { User } from '../../user';\nimport { Storage } from '@ionic/storage';\nimport { MyTransaction } from '../../my-transaction';\nimport { Chart } from 'chart.js';\n\n\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.page.html',\n  styleUrls: ['./chart.page.scss'],\n})\n\n/////////////////////////////////////////NOT WORKING !!!!!!!!!!//////////////////////////////////////\n/////////////////////////////////////////NOT WORKING !!!!!!!!!!//////////////////////////////////////\n/////////////////////////////////////////NOT WORKING !!!!!!!!!!//////////////////////////////////////\n/////////////////////////////////////////NOT WORKING !!!!!!!!!!//////////////////////////////////////\nexport class ChartPage implements OnInit{\n // @ViewChild('lineCanvas',null) lineCanvas;\n  @ViewChild(\"doughnutCanvas\", null) doughnutCanvas: ElementRef;\n \n  TransactionsList : MyTransaction[] = new Array ();\n  profile:User = new User();\n  mTypesAndAmounts = new Map<string,number>();\n  //StatsTypesAndAmounts = new Map<string,number>();\n  private doughnutChart: Chart;\n    constructor(private storage: Storage, private navController: NavController) {\n     \n      this.storage.get('user').then((val) => {\n        this.profile = JSON.parse(val);  \n    });\n\n    this.storage.get('transactions').then((val) => {\n      this.TransactionsList = JSON.parse(val);\n      this.TransactionsList.forEach(transaction => {\n        if  (transaction.recieverId == 0 ){\n          \n          this.TransactionsList.push(transaction);\n            //if my map contains type than we add amount of transaction to value in map else we create new map record\n            if(this.mTypesAndAmounts.has(transaction.transactionCategory)){\n              this.mTypesAndAmounts.set(transaction.transactionCategory,(this.mTypesAndAmounts.get(transaction.transactionCategory) + transaction.amount));\n            }\n            else{\n              this.mTypesAndAmounts.set(transaction.transactionCategory,transaction.amount)\n        }\n\n      }  \n      });\n      });\n      this.createDoughnut(this.mTypesAndAmounts)\n    }\n\n    ngOnInit() {\n    \n    }\n    \n    \n  \n    public createDoughnut(inDataMap: Map<string,number>) {\n\n      let bgColors = new Array();\n      let bgHowerColors = new Array();\n      inDataMap.forEach(()=>{\n        bgColors.push( this.hexToRgbA(this.getRandomColor()));\n        console.log(\"hex to rgbA = \", bgColors[bgColors.length-1]);\n        bgHowerColors.push(this.getRandomColor());\n      })\n  \n      console.log(inDataMap);\n        this.doughnutChart = new Chart(this.doughnutCanvas.nativeElement, {\n  \n          type: \"doughnut\",\n          data: {\n            datasets: [\n              {\n                label: \"Stats\",\n                data: Array.from( inDataMap.values() ),\n                backgroundColor: bgColors,\n                hoverBackgroundColor: bgHowerColors\n              }\n            ],\n            labels: Array.from( inDataMap.keys() )\n          },\n          options:{\n            legend:{\n              position:'bottom'\n            }\n          }\n        });\n        \n    }\n  \n    getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n  \n    hexToRgbA(hex){\n      let c;\n      c= hex.substring(1).split('');\n      if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n      }\n      c= '0x'+c.join('');\n      // tslint:disable-next-line: no-bitwise\n      return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',1)';\n  }\n  \n   \n  }"],"sourceRoot":""}